{"version":3,"sources":["components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Container/Container.js","components/App/App.js","redux/contacts/operations.js","redux/contacts/actions.js","redux/contacts/reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","components/AuthNav/AuthNav.module.css","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.js","components/AppBar/AppBar.module.css"],"names":["Navigation","exact","to","className","s","navLink","activeClassName","activeLink","AuthNav","nav__container","AppBar","isLoggedIn","useSelector","getIsLoggedIn","header__style","UserMenu","Container","children","HomeView","lazy","SignUpView","LoginView","App","fallback","path","component","axios","defaults","baseURL","addContact","createAsyncThunk","contact","a","rejectWithValue","post","data","message","fetchContacts","_","get","removeContact","contactId","delete","id","filterContacts","createAction","contactList","createReducer","fulfilled","payload","state","filter","contactFilter","authSlice","createSlice","name","initialState","user","email","token","extraReducers","register","action","logIn","logOut","persistConfig","key","storage","whitelist","contactReducer","combineReducers","store","configureStore","reducer","auth","persistReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","headers","common","Authorization","credentials","module","exports","getUserName","dispatch","useDispatch","user__container","greeting__title","type","logout__btn","onClick"],"mappings":"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","file":"static/js/main.f34fef6e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <NavLink\n        exact\n        to=\"/\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        Home\n      </NavLink>\n      <hr />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div className={s.nav__container}>\n      <NavLink\n        to=\"/signup\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        SignUp\n      </NavLink>\n      <NavLink to=\"/login\" className={s.navLink} activeClassName={s.activeLink}>\n        LogIn\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport s from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <header className={s.header__style}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import { Route, Switch } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport Loader from 'react-loader-spinner';\nimport AppBar from '../AppBar/AppBar';\nimport Container from '../Container/Container';\n\nimport './App.css';\n\nconst HomeView = lazy(() =>\n  import('../../views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */),\n);\nconst SignUpView = lazy(() =>\n  import(\n    '../../views/SignUpView/SignUpView' /* webpackChunkName: \"sign-up-view\" */\n  ),\n);\n\nconst LoginView = lazy(() =>\n  import(\n    '../../views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */\n  ),\n);\n\nconst UserMenu = lazy(() =>\n  import(\n    '../../components/UserMenu/UserMenu' /* webpackChunkName: \"user-menu\" */\n  ),\n);\n\nexport default function App() {\n  return (\n    <div className=\"Container\">\n      <AppBar />\n      <Container>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <Route path=\"/signup\" component={SignUpView} />\n            <Route path=\"/login\" component={LoginView} />\n            <Route path=\"/menu\" component={UserMenu} />\n          </Switch>\n        </Suspense>\n      </Container>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://6198e96a164fa60017c2321d.mockapi.io/contacts';\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContacts',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(`/contacts`, contact);\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(`/contacts`);\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const removeContact = createAsyncThunk(\n  'contacts/removeContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const {\n        data: { id },\n      } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContacts = createAction('contact/filter');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, fetchContacts, removeContact } from './operations';\nimport { filterContacts } from './actions';\n\nexport const contactList = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [removeContact.fulfilled]: (state, { payload }) => {\n    state.filter(({ id }) => id !== payload);\n  },\n});\n\nexport const contactFilter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut } from './auth-operations';\n\nconst initialState = {\n  user: { name: '', email: '' },\n  token: '',\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _) {\n      state.user = { name: '', email: '' };\n      state.token = '';\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { contactList, contactFilter } from './contacts/reducers';\nimport authSlice from './auth/auth-slice';\n\nimport logger from 'redux-logger';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'auth',\n  // version: 1,\n  storage,\n  whitelist: ['token'], //  в localStorage,\n};\n\nconst contactReducer = combineReducers({\n  contactList,\n  contactFilter,\n});\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authSlice),\n    contacts: contactReducer,\n  },\n\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n//импорт компонента Provider\nimport { Provider } from 'react-redux';\n//импорт глобального состояния\nimport { store, persistor } from './redux/store';\n//импорт компонента PersistGate\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"AuthNav_navLink__1FZ1a\",\"activeNavLink\":\"AuthNav_activeNavLink__ZE7yM\",\"nav__container\":\"AuthNav_nav__container__1vMuZ\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const getUserName = state => state.auth.user.name;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__container\":\"UserMenu_user__container__Ufilq\",\"logout__btn\":\"UserMenu_logout__btn__ZNavM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink___FiXb\",\"activeNavLink\":\"Navigation_activeNavLink__2dQuH\"};","import s from './UserMenu.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserName);\n  return (\n    <div className={s.user__container}>\n      <span className={s.greeting__title}>Welcome, {name}!</span>\n      <button\n        type=\"button\"\n        className={s.logout__btn}\n        onClick={() => dispatch(logOut())}\n      >\n        LogOut\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__style\":\"AppBar_header__style__XSbLe\"};"],"sourceRoot":""}