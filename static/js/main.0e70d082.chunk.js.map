{"version":3,"sources":["components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Container/Container.js","components/PrivatRoute/PrivatRoute.js","components/PublicRoute/PublicRoute.js","components/App/App.js","redux/contacts/reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","redux/contacts/operations.js","components/UserMenu/UserMenu.module.css","redux/contacts/actions.js","components/AppBar/AppBar.module.css"],"names":["Navigation","isLoggedIn","useSelector","getIsLoggedIn","exact","to","className","s","navLink","activeClassName","activeLink","AuthNav","nav__container","UserMenu","dispatch","useDispatch","name","getUserName","user__container","greeting__title","type","logout__btn","onClick","logOut","AppBar","header__style","Container","children","PrivateRoute","restricted","redirectTo","routeProps","PublicRoute","shouldRedirect","HomeView","lazy","SignUpView","LoginView","PhoneView","App","isFetchingCurrentUser","getIsFetchingCurrentUser","useEffect","fetchCurrentUser","fallback","path","contactList","createReducer","fetchContacts","fulfilled","_","payload","addContact","state","removeContact","filter","id","contactFilter","filterContacts","authSlice","createSlice","initialState","user","email","token","IsFetchingCurrentUser","extraReducers","register","logIn","pending","IsFecthingCurrentUser","rejected","persistConfig","key","storage","whitelist","contactReducer","combineReducers","store","configureStore","reducer","auth","persistReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","BASE_URL","axios","defaults","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","thunkAPI","getState","persistedToken","console","log","get","module","exports","baseURL","contact","message","contactId","delete","createAction"],"mappings":"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","file":"static/js/main.0e70d082.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport s from './Navigation.module.css';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        exact\n        to=\"/\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          exact\n          to=\"/contacts\"\n          className={s.navLink}\n          activeClassName={s.activeLink}\n        >\n          Phonebook\n        </NavLink>\n      )}\n\n      <hr />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div className={s.nav__container}>\n      <NavLink\n        to=\"/signup\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        SignUp\n      </NavLink>\n      <NavLink to=\"/login\" className={s.navLink} activeClassName={s.activeLink}>\n        LogIn\n      </NavLink>\n    </div>\n  );\n}\n","import s from './UserMenu.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserName);\n\n  return (\n    <div className={s.user__container}>\n      <span className={s.greeting__title}>Welcome, {name}!</span>\n      <button\n        type=\"button\"\n        className={s.logout__btn}\n        onClick={() => dispatch(logOut())}\n      >\n        LogOut\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport s from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <header className={s.header__style}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  children,\n  restricted,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  //   console.log(shouldRedirect);\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to=\"/\" /> : children}\n    </Route>\n  );\n}\n","import { Switch } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport Loader from 'react-loader-spinner';\nimport AppBar from '../AppBar/AppBar';\nimport Container from '../Container/Container';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrentUser } from '../../redux/auth/auth-operations';\nimport { getIsFetchingCurrentUser } from '../../redux/auth/auth-selectors';\n\nimport './App.css';\nimport PrivateRoute from '../PrivatRoute/PrivatRoute';\nimport PublicRoute from '../PublicRoute/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('../../views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */),\n);\nconst SignUpView = lazy(() =>\n  import(\n    '../../views/SignUpView/SignUpView' /* webpackChunkName: \"sign-up-view\" */\n  ),\n);\n\nconst LoginView = lazy(() =>\n  import(\n    '../../views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */\n  ),\n);\n\nconst PhoneView = lazy(() =>\n  import(\n    '../../views/PhoneView/PhoneView' /* webpackChunkName: \"phone-view\" */\n  ),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <div className=\"Container\">\n        <AppBar />\n        <Container>\n          <Suspense fallback={<Loader />}>\n            <Switch>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <PhoneView />\n              </PrivateRoute>\n              <PublicRoute exact path=\"/signup\" restricted>\n                <SignUpView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/login\" restricted>\n                <LoginView />\n              </PublicRoute>\n            </Switch>\n          </Suspense>\n        </Container>\n      </div>\n    )\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, fetchContacts, removeContact } from './operations';\nimport { filterContacts } from './actions';\n\nexport const contactList = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [removeContact.fulfilled]: (state, { payload }) => {\n    state.filter(({ id }) => id !== payload);\n  },\n});\n\nexport const contactFilter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, fetchCurrentUser } from './auth-operations';\n\nconst initialState = {\n  user: { name: '', email: '' },\n  token: '',\n  isLoggedIn: false,\n  IsFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _) {\n      state.user = { name: '', email: '' };\n      state.token = '';\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.IsFecthingCurrentUser = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.IsFecthingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { contactList, contactFilter } from './contacts/reducers';\nimport authSlice from './auth/auth-slice';\n\nimport logger from 'redux-logger';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'], //  в localStorage,\n};\n\nconst contactReducer = combineReducers({\n  contactList,\n  contactFilter,\n});\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authSlice),\n    contacts: contactReducer,\n  },\n\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n//импорт компонента Provider\nimport { Provider } from 'react-redux';\n//импорт глобального состояния\nimport { store, persistor } from './redux/store';\n//импорт компонента PersistGate\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const getUserName = state => state.auth.user.name;\n\nexport const getIsFetchingCurrentUser = state =>\n  state.auth.isFetchingCurrentUser;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const BASE_URL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\n        `${BASE_URL}/users/signup`,\n        credentials,\n      );\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(`${BASE_URL}/users/login`, credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post(`${BASE_URL}/users/logout`);\n      token.unset();\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI, { rejectWithValue }) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === '') {\n      console.log('No token');\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"AuthNav_navLink__1FZ1a\",\"activeNavLink\":\"AuthNav_activeNavLink__ZE7yM\",\"nav__container\":\"AuthNav_nav__container__1vMuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink___FiXb\",\"activeNavLink\":\"Navigation_activeNavLink__2dQuH\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContacts',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(`/contacts`, contact);\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(`/contacts`);\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const removeContact = createAsyncThunk(\n  'contacts/removeContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const {\n        data: { id },\n      } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\n// export const removeContact = createAsyncThunk(\n//   'contacts/removeContact',\n//   async (contactId, { rejectWithValue }) => {\n//     try {\n//       const response = await axios.delete(`/contacts/${contactId}`);\n//       if (response.status === 200) {\n//         return contactId;\n//       } else {\n//         throw new Error({ message: 'error' });\n//       }\n//     } catch (error) {\n//       rejectWithValue(error.message);\n//     }\n//   },\n// );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__container\":\"UserMenu_user__container__Ufilq\",\"logout__btn\":\"UserMenu_logout__btn__ZNavM\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContacts = createAction('contact/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__style\":\"AppBar_header__style__XSbLe\"};"],"sourceRoot":""}